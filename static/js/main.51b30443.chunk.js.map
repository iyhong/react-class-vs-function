{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["FuncComp","props","useState","initNumber","number","setNumber","Date","toString","date","setDate","className","type","value","onClick","Math","random","ClassComp","state","handleRandBtnClick","setState","handleDateBtnClick","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAcA,SAASA,EAASC,GAAQ,IAAD,EACKC,mBAASD,EAAME,YADpB,mBAChBC,EADgB,KACRC,EADQ,OAECH,oBAAS,IAAII,MAAOC,YAFrB,mBAEhBC,EAFgB,KAEVC,EAFU,KAWvB,OACE,sBAAKC,UAAU,YAAf,UACE,4DACA,yCAAYN,KACZ,uCAAUI,KACV,uBAAOG,KAAK,SAASC,MAAM,SAASC,QAbjB,WACrBR,EAAUS,KAAKC,aAab,uBAAOJ,KAAK,SAASC,MAAM,OAAOC,QAVX,WACzBJ,GAAQ,IAAIH,MAAOC,kB,IAejBS,E,4MACJC,MAAQ,CACNb,OAAQ,EAAKH,MAAME,WACnBK,MAAO,IAAIF,MAAOC,Y,EAGpBW,mBAAqB,WACnB,EAAKC,SAAS,CACZf,OAAQU,KAAKC,Y,EAIjBK,mBAAqB,WACnB,EAAKD,SAAS,CACZX,MAAO,IAAIF,MAAOC,c,4CAItB,WACE,OACE,sBAAKG,UAAU,YAAf,UACE,yDACA,yCAAYW,KAAKJ,MAAMb,UACvB,uCAAUiB,KAAKJ,MAAMT,QACrB,uBAAOG,KAAK,SAASC,MAAM,SAASC,QAASQ,KAAKH,qBAClD,uBAAOP,KAAK,SAASC,MAAM,OAAOC,QAASQ,KAAKD,4B,GAzBhCE,aAgCTC,EAlEf,WACE,OACE,sBAAKb,UAAU,YAAf,UACE,6CACA,cAACV,EAAD,CAAUG,WAAY,IACtB,cAAC,EAAD,CAAWA,WAAY,QCIdqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51b30443.chunk.js","sourcesContent":["import React,  { Component, useState }  from 'react'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>hello world</h1>\n      <FuncComp initNumber={2}></FuncComp>\n      <ClassComp initNumber={2}></ClassComp>\n    </div>\n  );\n}\n\n\nfunction FuncComp(props) {\n  const [number, setNumber] = useState(props.initNumber);\n  const [date, setDate] = useState(new Date().toString());\n  const handleBtnClick = () =>{\n    setNumber(Math.random())\n  }\n\n  const handleDateBtnClick = () => {\n    setDate(new Date().toString())\n  }\n\n  return (\n    <div className=\"container\">\n      <h2> function style component </h2>\n      <p>Number: {number}</p>\n      <p>Date: {date}</p>\n      <input type=\"button\" value=\"random\" onClick={handleBtnClick}></input>\n      <input type=\"button\" value=\"date\" onClick={handleDateBtnClick}></input>\n    </div>\n  )\n}\n\n\nclass ClassComp extends Component {\n  state = {\n    number: this.props.initNumber,\n    date: (new Date().toString())\n  }\n\n  handleRandBtnClick = () => {\n    this.setState({\n      number: Math.random()\n    })\n  }\n\n  handleDateBtnClick = () => {\n    this.setState({\n      date: (new Date().toString())\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2> class sytle component </h2>\n        <p>Number: {this.state.number}</p>\n        <p>Date: {this.state.date}</p>\n        <input type=\"button\" value=\"random\" onClick={this.handleRandBtnClick}></input>\n        <input type=\"button\" value=\"date\" onClick={this.handleDateBtnClick}></input>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}